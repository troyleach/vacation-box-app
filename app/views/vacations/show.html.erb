<div class="show_page_wrapper">
<div id="div-lat-lng" lat="<%= @vacation.latitude %>" lng="<%= @vacation.longitude %>"></div>
<section class="bing_search_container shoadows">
  <div class="iframe_row row">
    <div class="col-lg-12">
      <iframe name="DBox" src="http://www.bing.com" frameborder="2"></iframe>
    </div>
  </div>
</section>
<div>
<span class="search_text">Do all your vacation searching from right here!</span>
<span class="vacation_date"></span><!-- this is where the vacation date might live -->
<button class="bing_search_text"><a href="http://www.bing.com" target="DBox">Back to BING</a></button>
</div>

<div ng-app="app">
  <div ng-controller="vacationSpotCtrl" ng-init="fetchData(<%= @vacation.id %>)">
  <div id="div-lat-lng" lat="<%= @vacation.latitude %>" lng="<%= @vacation.longitude %>"></div>

    <section class="vacation_section_two">
      <div class="save_spot row">
        <div class="save_spot col-md-6  ">
          <p class="user_input_text">Type the name or the address of the place you wish to visit and then hit return:</p>
          <input type="text" id="user_input" placeholder="Type Name or Address" ng-model="userInput">
          <hr>
          <div class="row">
            <div class="stats_weather col-sm-6">
              <div id="spot_table">
                <table class="current_stats" border="0">
                  <th class="table_header" colspan="2">Things to know about your trip:</th>
                  <tr class="table_row">
                    <td class="table_col_description">Local time:</td>
                    <td class="vacation_table_col"><%= @vacation.time_date %> CST</td>
                  </tr>
                  <tr class="table_row">
                    <td class="table_col_description">Lodging:</td>
                    <td class="vacation_table_col"><%= @hotel.name %></td>
                  </tr>
                  <tr class="table_row">
                    <td class="table_col_description"></td>
                    <td class="vacation_table_col_address"><%= @hotel.address %></td>
                  </tr>
                  <tr class="table_row">
                    <td class="table_col_description"></td>
                    <td class="vacation_table_col_city"><%= @hotel.city %></td>
                  </tr>
                  <tr class="table_row">
                    <td class="table_col_description">Transpertation:</td>
                    <td class="vacation_table_col"><%= @vacation.transpertation %></td>
                  </tr>
                </table>
              </div><!--END OF TABLE  -->

                <div class="vacation_stuff row">
                  <div class="col-md-6">
                    <div id="wapiblock"></div>
                  </div>
                  <div class="col-md-6">
                    <div id="map-canvas-vacation" class="col-md-6"></div>
                  </div>
                  <div class="stamp2_placement">
                    <div class="time_stamp2"><%= @helper.time_stamp %></div>
                    <div class="stamp_des"><%= @vacation.city.capitalize %></div>
                    <%= image_tag("stamp2.png", :alt => "Logo", :class => "stamp2") %>
                  </div>
                </div><!--END vacation pictrue and map  -->
        
    
            </div><!--END OF SPOT AND WEATHER  -->
            <div class="col-sm-6">
            <table class="spot_weather_table" border="0">
              <tr>
                <td class="spot_summary">
                <div class="spot_cloud_div">
                  <canvas class="<%= @current_weather.icon %>" width="54" height="54"></canvas>
                </div>
                <div class="spot_summary_div">
                  <span class="spot_summary_text"><%= @current_weather.summary %></span>
                </div>
                </td>
              </tr>
              <tr>
                <td class="spot_high_low">L <%= @week_of_weather[1].temperatureMin.round %>&degF | H <%= @week_of_weather[1].temperatureMax.round %>&degF </td>
              </tr>
              <tr>
                <td class="spot_temp"><%= @current_weather.temperature.round %>&deg </td>
              </tr>
            </table>
            </div>
          </div><!--ROW  -->
        </div><!--END OF SAVE SPOT  -->

        
    <!-- THE FORM -->
        <div class="city_image col-md-6">
          
          <div class="row">
          <div class="place_name">{{place.name}}</div>
          <div class="place_data col-sm-6">
            <table id="vacation_spot" border="0">
              <tr>
                <td class="vacation_label">Rating:</td>
                <td class="wideField" colspan="2">{{ place.rating }}</td>
              </tr>
              <tr>
                <td class="vacation_label">Open:</td>
                <td class="wideField" colspan="2" ng-if="!place.opening_hours"></td>
                <td class="wideField" colspan="2" ng-if="place.opening_hours">We are open!</td>
                <td class="wideField" colspan="2" ng-if="place.opening_hours === false">Sorry, we are closed!</td>
              </tr>
              <tr>
                <td class="vacation_label">Hours:</td>
                <td class="wideField">
                <div ng-if="place.opening_hours.weekday_text">
                  <div ng-click="show=!show">
                    Click to see hours:
                  </div>
                  <div ng-hide="!show">
                    <ul>
                      <li class="hours_open">{{ place.opening_hours.weekday_text[0]}}</li>
                      <li class="hours_open">{{ place.opening_hours.weekday_text[1]}}</li>
                      <li class="hours_open">{{ place.opening_hours.weekday_text[2]}}</li>
                      <li class="hours_open">{{ place.opening_hours.weekday_text[3]}}</li>
                      <li class="hours_open">{{ place.opening_hours.weekday_text[4]}}</li>
                      <li class="hours_open">{{ place.opening_hours.weekday_text[5]}}</li>
                      <li class="hours_open">{{ place.opening_hours.weekday_text[6]}}</li>
                    </ul>
                  </div>
                </div>
                </td>
              </tr>
              
              <tr>
                <td class="vacation_label">Phone:</td>
                <td class="wideField" colspan="2">{{ place.international_phone_number }}</td>
              </tr>
              <tr>
                <td class="vacation_label">Price level:</td>
                <td class="wideField" colspan="2">{{ place.price_level }}</td>
              </tr>
<!-- thing to do, if restaurant | bar set to menu, else website -->
              <tr>
                <td class="vacation_label">Website:</td>
                <td class="wideField" colspan="2" ng-if="place.website"><a href="{{ place.website }}" target="DBox">website</a></td>
                <td class="wideField" colspan="2" ng-if="!place.website"></td>
              </tr>
              <tr>
                <td class="vacation_label">Address:</td>
                <td class="wideField">{{ spotInfo.street_number }} {{ spotInfo.route }}</td>
              </tr>
            
              <tr>
                <td class="vacation_label">City:</td>
                <td class="wideField" colspan="2">{{ spotInfo.locality }}</td>
              </tr>
              <tr>
                <td class="vacation_label">State:</td>
                <td class="wideField" colspan="2">{{ spotInfo.administrative_area_level_1 }}</td>
              </tr>
              <tr>
                <td class="vacation_label">Zip:</td>
                <td class="wideField" ng-model="spotInfo.postal_code" colspan="2">{{ spotInfo.postal_code }}</td>
              </tr>
              <tr>
                <td class="vacation_label">Country:</td>
                <td class="wideField" colspan="2">{{ spotInfo.country }}</td>
              </tr>
              <tr>
                <td class="vacation_label">Reservations:</td>
                <td class="wideField" colspan="2"><a href=""></a></td>
              </tr>
            </table>

            
              <div class="current_stats col-md-3">
              <textarea ng-model="spotNote" rows="4" cols="80" class="text_box"></textarea>
              </div>
            
          

          </div><!-- END OF PLACE_DATA -->
          <div class="place_photos col-sm-6">
         
            
            <img src="{{ place.photos[0].getUrl({ 'maxWidth': 250, 'maxHeight': 250 }) }}" alt="Picture of spot" ng-if="place.photos" class="vacation_spot_photo">
          
            
          </div>
        </div><!-- END OF row for data and picture -->
          <div class="add_spot_button">
          <button ng-click="addNewSpot(spotNote)">Add spot</button>
          </div> 
        </div><!-- END OF city_image col-md-6 -->
      </div><!-- END OF save_spot row -->
    </section>

    <section class="vacation_section_three">
    <p class="vacation_spot_text">Your saved vacation spots</p>
    <hr class="vacation_spot_line">
      <div class="outter_box_row row">
        <div class="inner_outter_box col-sm-6">
            <div ng-repeat="vacation_spot in vacations.vacation_spots" class="spot_name col-xs-8">
              <img src="{{vacation_spot.image}}" alt="REALLY?? no image could be found" class="spot_list_image">
            <div class="spot_list_name"><a href="/vacation_spots/{{vacation_spot.id}}">{{ vacation_spot.spot_name }}</a></div>
            </div>
        </div>
          <!-- my text box use to be here -->
      </div>
    </section>

  </div><!-- END OF NG-CONTROLLER -->
</div><!-- END OF NG-APP-->


</div><!-- End of page wrapper -->


<script>
  function setup() {

  var floor = Math.floor;
  var div = document.getElementById('div-lat-lng');
  var lat = div.getAttribute("lat");
  var lng = div.getAttribute("lng");

  // var lat = 38.9072;
  // var lng = -77.0369;
  // var latlng = [38.9072, -77.0369];
  // var latlng = [41.8818, -87.6232]

  var latlng = [parseFloat(lat), parseFloat(lng)];

  function makeMyRequest(latlng) {

    var myRequest;
    
    myRequest = {
      'tag': 'buildings',
      'rect': getBoundingBox(latlng, 9)
    };
    return myRequest;
  };

  var myRequest = makeMyRequest(latlng);

  var photoOptions = {
    'width': 250,
    'height': 250
  };

  var wapiblock = document.getElementById('wapiblock');
  var widget = new panoramio.PhotoWidget(wapiblock, myRequest, photoOptions);
  widget.setPosition(0);

  }

  window.addEventListener('load', setup, false);


  // **********************************************************
  'use strict';

  /**
   * @param {number} distance - distance (km) from the point represented by centerPoint
   * @param {array} centerPoint - two-dimensional array containing center coords [latitude, longitude]
   * @description
   *   Computes the bounding coordinates of all points on the surface of a sphere
   *   that has a great circle distance to the point represented by the centerPoint
   *   argument that is less or equal to the distance argument.
   *   Technique from: Jan Matuschek <http://JanMatuschek.de/LatitudeLongitudeBoundingCoordinates>
   * @author Alex Salisbury
  */

  function getBoundingBox(centerPoint, distance) {
    var MIN_LAT, MAX_LAT, MIN_LON, MAX_LON, R, radDist, degLat, degLon, radLat, radLon, minLat, maxLat, minLon, maxLon, deltaLon;
    if (distance < 0) {
      return 'Illegal arguments';
    }
    // helper functions (degrees<–>radians)
    Number.prototype.degToRad = function () {
      return this * (Math.PI / 180);
    };
    Number.prototype.radToDeg = function () {
      return (180 * this) / Math.PI;
    };
    // coordinate limits
    MIN_LAT = (-90).degToRad();
    MAX_LAT = (90).degToRad();
    MIN_LON = (-180).degToRad();
    MAX_LON = (180).degToRad();
    // Earth's radius (km)
    R = 6378.1;
    // angular distance in radians on a great circle
    radDist = distance / R;
    // center point coordinates (deg)
    degLat = centerPoint[0];
    degLon = centerPoint[1];
    // center point coordinates (rad)
    radLat = degLat.degToRad();
    radLon = degLon.degToRad();
    // minimum and maximum latitudes for given distance
    minLat = radLat - radDist;
    maxLat = radLat + radDist;
    // minimum and maximum longitudes for given distance
    minLon = void 0;
    maxLon = void 0;
    // define deltaLon to help determine min and max longitudes
    deltaLon = Math.asin(Math.sin(radDist) / Math.cos(radLat));
    if (minLat > MIN_LAT && maxLat < MAX_LAT) {
      minLon = radLon - deltaLon;
      maxLon = radLon + deltaLon;
      if (minLon < MIN_LON) {
        minLon = minLon + 2 * Math.PI;
      }
      if (maxLon > MAX_LON) {
        maxLon = maxLon - 2 * Math.PI;
      }
    }
    // a pole is within the given distance
    else {
      minLat = Math.max(minLat, MIN_LAT);
      maxLat = Math.min(maxLat, MAX_LAT);
      minLon = MIN_LON;
      maxLon = MAX_LON;
    }
    
    var boxObject = {
      'sw': {
        'lat': minLat.radToDeg(),
        'lng': minLon.radToDeg()
      },
      'ne': {
        'lat': maxLat.radToDeg(),
        'lng': maxLon.radToDeg()
      }  
    };
    return boxObject;
    

  };

</script>

<script type="text/javascript">
  var map;
    var intiallat = <%= @vacation.latitude %>;
    var intiallong = <%= @vacation.longitude %>;
    console.log(intiallong);
    console.log(intiallat);
    
    
  var myLatLong = new google.maps.LatLng(intiallat,intiallong);

  function initialize() {
    var mapOptions = {
      zoom: 10,
      center: myLatLong,
      disableDefaultUI: true
    };
    map = new google.maps.Map(document.getElementById('map-canvas-vacation'),
        mapOptions);

    var marker = new google.maps.Marker({
        position: myLatLong,
        map: map,
        title:"Hello World!"
    });
  }
  google.maps.event.addDomListener(window, 'load', initialize);
</script>

<script>
  var icons = new Skycons({"color":"#666"}),

      list = [
        "clear-day",
        "clear-night",
        "partly-cloudy-day",
        "partly-cloudy-night",
        "cloudy",
        "rain",
        "sleet",
        "snow",
        "wind",
        "fog"
       ],
      i;

  for(i = list.length; i--; ) {
      var weatherType = list[i],
          elements = document.getElementsByClassName( weatherType );
      for (e = elements.length; e--;){
          icons.set( elements[e], weatherType );
      }
  }

  icons.play();
</script>


