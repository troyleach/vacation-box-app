

<script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'></script>
<script src="/assets/sitewide/points_of_interest.js" type="text/javascript"></script>


<!-- I have a shit ton of logic in this view... need to get it outta here!!! -->
<div ng-app="app">
<div ng-controller="vacationsCtrl">
  <div id="div-lat-lng" lat="<%= @profile.latitude %>" lng="<%= @profile.longitude %>"></div>


    <div class="new_vacation_link">
      <a href='<%= new_vacation_path %>'>- Create a new vacation -</a>
    </div>

    <section class"section_one">
      <div class="body_one row">
        <div class="points_of_interest_box shoadows col-md-6">
        <h4 class="vacation_lounge_title">Things to do in <%= @profile.locality %></h4>


        <div class="row">
          <div class="col-md-6">
           <div id="map-canvas-interests"></div>
          </div>

          <div class="point_interest_box_two col-md-6">  
            <div id="listing">
              <table id="resultsTable">
                <tbody id="results"></tbody>
              </table>
            </div>

            <div id="info-content">
              <table>
                <tr id="iw-url-row" class="iw_table_row">
                  <td id="iw-icon" class="iw_table_icon"></td>
                  <td id="iw-url"></td>
                </tr>
                <tr id="iw-address-row" class="iw_table_row">
                  <td class="iw_attribute_name">Address:</td>
                  <td id="iw-address"></td>
                </tr>
                <tr id="iw-phone-row" class="iw_table_row">
                  <td class="iw_attribute_name">Telephone:</td>
                  <td id="iw-phone"></td>
                </tr>
                <tr id="iw-rating-row" class="iw_table_row">
                  <td class="iw_attribute_name">Rating:</td>
                  <td id="iw-rating"></td>
                </tr>
                <tr id="iw-website-row" class="iw_table_row">
                  <td class="iw_attribute_name">Website:</td>
                  <td id="iw-website"></td>
                </tr>
              </table>
            </div>
          </div><!-- END OF SECOND BOX  -->
          </div><!-- END OF points row for the map and table  -->
        </div><!-- END OF points of interest BOX  -->
          
        

        
        <div class="places_been shoadows col-md-6">
          <h4 class="vacation_lounge_title">Places I have been</h4>
          <div>
          <span>HOME</span> <img src="http://chart.apis.google.com/chart?chst=d_map_xpin_icon_withshadow&chld=pin_sright|home|C9DE55|FCFAE1" alt="">
          <span>Places Going</span> <img src="http://chart.apis.google.com/chart?chst=d_map_xpin_letter_withshadow&chld=pin_star|G|B9121B|FCFAE1|FCFAE1" alt="Places going pin">
          <span>Places Been</span> <img src="https://chart.googleapis.com/chart?chst=d_map_pin_letter_withshadow&chld=B|E6E2AF|046380" alt="Places I've been pin">
          <span>Cluster of pins</span> <img src="http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclusterer/images/m1.png" alt="Image of cluster">
            <div id="map" style='width: 100%; height: 300px;'></div>
          </div>
          <p>Keep track of the places you have traveled. Simply type in the city and a description and click 'pin it'.</p>
          <%= form_tag '/place_beens' do %>
            <div class="places_been_form">
              <%= text_field_tag :address, nil, :placeholder => 'City or Address', :class => "been_address", :style => "background: #849696;, width: 100px;" %>
              <%= text_field_tag :description, nil, :placeholder => 'Brief description', :class => "been_description", :style => "background: #849696;" %>
              <%= text_field_tag :title, nil, :placeholder => 'Title of the vacation', :class => "been_title", :style => "background: #849696;" %>
              <%= submit_tag "Pin it" %>
            </div>
          <% end %>

        </div>
      </div><!-- END OF body_one row  -->
    </section>

    <section>
      <div class="section_two row">
        <div class="home_city_box shoadows col-md-6">
         <h4 class="home_city_title">Home city</h4>
          <div class="row">
            <!-- look a this website. I googled chi town, then clicked on the image and it took me here the bottom code needs to be from google api / image -->
            <div class="col-md-6">
<!-- PICTURE -->
              <div id="wapiblock"></div>
              
            </div>
              <div id="map-canvas-home" class="col-md-6"></div>
          </div>      
        </div>
        <div class="weather shoadows col-md-6">
<!-- WEATHER -->
        <h4 class="home_city_title">Weather</h4>
        <% if @profile == nil || @profile.locality == nil  %>
        <p>- Current Weather -</p>
          <a href="/profiles/<%= current_user.id %>/edit"><p class="no_profile">- Please update your profile -</p></a>
        <% else %>
          <P><%= @current_weather.to_date %> | &degF</P>
          <table class="weather_table" border="0">
            <tr>
            
              <td class="current_summary"><%= @current_weather.summary %></td>
              <% @week_of_weather.each do |day| %>
                <td class="week_day"><%= day.temperatureMax.round %>&deg</td>
              <% end %>
            </tr>
            <tr>
              <td class="current_temp">
                <%= @current_weather.temperature.round %>&deg
                <canvas class="<%= @current_weather.icon %> skycon_icon" width="84" height="84"></canvas>
              </td>
              <% @week_of_weather.each do |day| %>
                <td class="week_day">
                  <canvas class="<%= day.icon %>" width="32" height="32"></canvas>
                  <div><%= day.abbreviated_week_day %></div>
                </td>
              <% end %>
            </tr>
            <tr>
              <td class="current_change_precip">Chance of precip: <%= @current_weather.precip %></td>
                <% @week_of_weather.each do |day| %>
                  <td class="week_day"><%= day.temperatureMin.round %>&deg</td>
                <% end %>
            </tr>
          </table>
          <p class="data_provided_by">Data provided by <a href="<%= @current_weather.data_provided_by %>" target="_blank"><%= @current_weather.forecast %></a></p>
        <% end %>
        </div>
      </div>
      <div>
      </div>
    </section>

<!-- VACATION LOUNGE...  -->
    
  <section id="center">
    <div class="row section_three message_center_box"> 
      <div class="vacation_lounge shoadows col-md-12">
        <h4 class="vacation_lounge_title">Vacation Lounge...</h4>
                    <p class="ask_question">Ask a question:</p>
                      <table border="0" class="message_center_table">
                      <%= form_tag "/messages" do %>
                        <tr class="message_table_row">
                          <td class="message_talbe_col_text" valign="top">
                            <%= image_tag current_user.gravatar_url,  :class => "gravatar_image" %>
                            <% if @profile == nil || @profile.username == nil  %>
                              <p>user name</p>
                            <% else %>
                              <p class="message_user_name"><%= @profile.username %></p>
                              <p class="message_date"><%= @helper.today %></p>
                            <% end %>
                          </td>
                          <td class="message_talbe_col">
                            <div class="bubble">
                            <p class="message_title">
                              <%= text_field_tag :title, "Title" %>
                            </p>
                            <p class ="message_post_message">
                              <%=text_area_tag :message, 'Type message here', :size => "40x3" %>
                            </p>
                            <p class ="message_reply"><%= submit_tag "Post", :class => "btn btn-warning"%></p>
                            </div>
                          </td>
                        </tr>
                        <% end %>
                      </table>
                      
                      <% if @profile == nil || @profile.id == nil  %>
                        <p>update your profile</p>
                      <% else %>
                        <% @message_count = [] %>
                        <% @replies_count = [] %>
                        <% @replies_count_one = [] %>
                        <% @messages.each do |key, value| %>
                          <% @message_count << key.profile_id if key.profile_id == @profile.id %>
                          <% @replies_count << key.replies if key.profile_id == @profile.id %>
                        <% end %>

                        <% @replies_count.each do |replies| %>
                          <% @replies_count_one << replies.size %>
                        <% end %>

                    

                        <% if @m_count ==  "null"
                           @m_count = 0
                           @r_count = 0
                         elsif @m_count && @r_count == "null"
                           @m_count = @message_count.size
                           @r_count = 0
                         else
                          @m_count = @message_count.size
                          @r_count = @replies_count_one.inject(:+)
                         end
                           %>
                      <% end %>
                      <p class="general_text">You have a total of: | <span><%= @m_count %> posts</span> | <span><%= @r_count %> replies</span></p>
              <hr>
              <div class="message_box">
          <!-- really.. get rid of the code below.. HACK job -->
                    <% link = "a" %>
                    
                    <% @messages = @messages.sort { |a, b| b.created_at <=> a.created_at } %>
                    <% @messages.each do |message| %>
                      <% user = @user_profile.find(message.profile_id) %>
                      <% user_email = @users.find(user.user_id) %>
                      <% replies_count = message.replies.size %>
                      
                      <table border="0" class="message_center_table">
                        <tr class="message_table_row">
                          <td class="message_talbe_col_text" valign="top">
                            <%= image_tag user_email.gravatar_url,  :class => "gravatar_image" %>
                            <p class="message_user_name"><%= user.username %></p>
                            <p class="message_date"><%= @helper.convert_date(message.created_at) %></p>
                          </td>
                          <td class="message_talbe_col">
                            <div class="bubble">
          <!-- replies COUNT -->
                            <p class="message_title"><%= message.title %> <span class="reply_count"><%= replies_count %> replies</span></p>
                            <p class ="message_message"><%= message.message %></p>

          <!-- the below div tag, message_replies, not sure where the end is for this -->
                              <div class="message_replies">
                                <span class="reply_button" data-toggle="collapse" data-target="#<%= message.id %>" aria-expanded="false" aria-controls="<%= message.id %>">
                                  <p class ="message_reply"><span class="caret"></span>  See <span class="message_reply_button">replies</span></p>
                                </span>
                                <div class="collapse" id="<%= message.id %>">
                                  <div class="well">
                                  <% message.replies.each do |reply| %>
                                  <% reply_user_name = @user_profile.find(reply["profile_id"]) %>
                                      <hr class="reply_hr">
                                      <p class="reply_from">From: <%= reply_user_name.username %></p>
                                      <p class="reply_date"><%= @helper.convert_date(reply["created_at"]) %></p>
                                      <p class="reply_text"><%= reply["reply"] %></p>
                                  <% end %>
                                    </div>
                                  </div>
                                </div>
          <!-- THIS IS THE POST TO A REPLY BUTTON -->
                                  <span data-toggle="collapse" data-target="#<%= link %>" aria-expanded="false" aria-controls="<%= link %>">
                                    <p class ="message_reply"><span class="caret"></span>Reply to <span class="message_reply_button"><%= user.username %></span></p>
                                  </span>
                                  <div class="collapse" id="<%= link %>">
                                    <div class="post_box">
                                      <%= form_tag "/replies" do %>
                                      <%=text_area_tag :reply, 'Type message here', :size => "40x3" %>
                                      <%= hidden_field_tag :message_id, message.id %>
                                      <p class ="message_reply"><%= submit_tag "Post", :class => "btn btn-warning"%></p>
                                      <% link.next! %>
                                      <% end %>
                                    </div>
                                  </div>  

                            </div>
                          </td>
                        </tr>
                      </table>
                    <% end %>
                    </div><!-- this is the end of the message_box for scrolling -->
      </div>
    </div><!-- end of the row div section 3 -->
  </section>

  </div><!-- End of ng-app -->
</div><!-- End of ng-controller -->



<script type="text/javascript">
  handler = Gmaps.build('Google');
  handler.buildMap({ provider: {
    mapTypeId: google.maps.MapTypeId.TERRAIN,
    zoom: 1,
    center: new google.maps.LatLng(41.8818,-87.6232)
    // pass in other Google Maps API options here
  }, internal: {id: 'map'}}, function(){

    markers = handler.addMarkers(<%=raw @hash.to_json %>);
    // markers = handler.addMarkers(<%=raw @hash.to_json %>, { opacity: 0.5 });
    markers2 = handler.addMarkers(<%=raw @hash2.to_json %>);
    markers3 = handler.addMarkers(<%=raw @hash3.to_json %>);
    handler.bounds.extendWith(markers2);
    // handler.fitMapToBounds();
  });



</script>


<!-- this is the map for the city location, need to take away the zoom function -->
<% if @profile.latitude == nil %>
  <script type="text/javascript">
    var map;  
    var intiallat = 39.7392;
    var intiallong = -104.99;
      
    var text = "we are here"

    var myLatLong = new google.maps.LatLng(intiallat,intiallong);

    function initialize() {
      var mapOptions = {
        zoom: 8,
        center: myLatLong
      };
      text = new google.maps.Map(document.getElementById('map-canvas-home'),
          mapOptions);

      var marker = new google.maps.Marker({
          position: myLatLong,
          map: map,
          title:"Hello World!"
      });
    }
    google.maps.event.addDomListener(window, 'load', initialize);
  
</script>
  
<% else %>
  <script type="text/javascript">
    var map;
      var intiallat = <%= @profile.latitude %>;
      var intiallong = <%= @profile.longitude %>;
      
      
    var myLatLong = new google.maps.LatLng(intiallat,intiallong);

    function initialize() {
      var mapOptions = {
        zoom: 9,
        center: myLatLong,
        disableDefaultUI: true
      };
      map = new google.maps.Map(document.getElementById('map-canvas-home'),
          mapOptions);

      var marker = new google.maps.Marker({
          position: myLatLong,
          map: map,
          title:"Hello World!"
      });
    }
    google.maps.event.addDomListener(window, 'load', initialize);
  </script>

<% end %>

<!-- Points of interest -->
<script type="text/javascript">



// This example uses the autocomplete feature of the Google Places API.
// It allows the user to find all hotels in a given place, within a given
// country. It then displays markers for all the hotels returned,
// with on-click details for each hotel.

var interestMap, places, infoWindow;
var markers = [];
var autocomplete;
var countryRestrict = { 'country': 'us' };
var MARKER_PATH = 'https://maps.gstatic.com/intl/en_us/mapfiles/marker_green';
var hostnameRegexp = new RegExp('^https?://.+?/');

// var placeType = {
//   'types': ['lodging']
// }

var countries = {
  'au': {
    center: new google.maps.LatLng(-25.3, 133.8),
    zoom: 4
  },
  'br': {
    center: new google.maps.LatLng(-14.2, -51.9),
    zoom: 3
  },
  'ca': {
    center: new google.maps.LatLng(62, -110.0),
    zoom: 3
  },
  'fr': {
    center: new google.maps.LatLng(46.2, 2.2),
    zoom: 5
  },
  'de': {
    center: new google.maps.LatLng(51.2, 10.4),
    zoom: 5
  },
  'mx': {
    center: new google.maps.LatLng(23.6, -102.5),
    zoom: 4
  },
  'nz': {
    center: new google.maps.LatLng(-40.9, 174.9),
    zoom: 5
  },
  'it': {
    center: new google.maps.LatLng(41.9, 12.6),
    zoom: 5
  },
  'za': {
    center: new google.maps.LatLng(-30.6, 22.9),
    zoom: 5
  },
  'es': {
    center: new google.maps.LatLng(40.5, -3.7),
    zoom: 5
  },
  'pt': {
    center: new google.maps.LatLng(39.4, -8.2),
    zoom: 6
  },
  'us': {
    center: new google.maps.LatLng(37.1, -95.7),
    zoom: 3
  },
  'uk': {
    center: new google.maps.LatLng(54.8, -4.6),
    zoom: 5
  },
  'homeState': {
    center: new google.maps.LatLng(<%= @profile.latitude %>, <%= @profile.longitude %>),
    zoom: 13
  },
};


// will need to do a if/else based on homeState or new user, new user will be centered on country

function initialize() {
  var myOptions = {
    zoom: countries['homeState'].zoom,
    center: countries['homeState'].center,
    mapTypeControl: false,
    panControl: false,
    zoomControl: false,
    streetViewControl: false
  };

  interestMap = new google.maps.Map(document.getElementById('map-canvas-interests'), myOptions);

  infoWindow = new google.maps.InfoWindow({
      content: document.getElementById('info-content')
      });

  // Create the autocomplete object and associate it with the UI input control.
  // Restrict the search to the default country, and to place type "cities".

  // autocomplete = new google.maps.places.Autocomplete(
  //     /** @type {HTMLInputElement} */(document.getElementById('autocomplete')),
  //     {
  //       types: ['(cities)'],
  //       componentRestrictions: countryRestrict
  //     });
  places = new google.maps.places.PlacesService(interestMap);
  search();

  // google.maps.event.addListener(autocomplete, 'place_changed', onPlaceChanged);

  // Add a DOM event listener to react when the user selects a country.
  // google.maps.event.addDomListener(document.getElementById('country'), 'change',
  //     setAutocompleteCountry);
}

// When the user selects a city, get the place details for the city and
// zoom the map in on the city.
// I think the only thing this function is doing is moving the map to the location, then it
// calls the search function
// function onPlaceChanged() {
//   var place = autocomplete.getPlace();
//   if (place.geometry) {
//     interestMap.panTo(place.geometry.location);
//     interestMap.setZoom(14);
//     search();
//   } else {
//     document.getElementById('autocomplete').placeholder = 'Enter a city';
//   }
// }

// Search for hotels(OR WHATEVER LIKE SHOWN BELOW BAR) in the selected city, within the viewport of the map.
function search() {
  var museum = {
    bounds: interestMap.getBounds(),
    types: ['museum']
  };

  var search = {
    bounds: interestMap.getBounds(),
    types: ['bar', 'museum', 'aquarium', 'restaurant']
  };

  places.nearbySearch(search, function(results, status) {
    if (status == google.maps.places.PlacesServiceStatus.OK) {
      clearResults();
      clearMarkers();
      // Create a marker for each hotel found, and
      // assign a letter of the alphabetic to each marker icon.
      for (var i = 0; i < results.length; i++) {
        var markerLetter = String.fromCharCode('A'.charCodeAt(0) + i);
        var markerIcon = MARKER_PATH + markerLetter + '.png';
        // Use marker animation to drop the icons incrementally on the map.
        markers[i] = new google.maps.Marker({
          position: results[i].geometry.location,
          animation: google.maps.Animation.DROP,
          icon: markerIcon
        });
        // If the user clicks a hotel marker, show the details of that hotel
        // in an info window.
        markers[i].placeResult = results[i];
        google.maps.event.addListener(markers[i], 'click', showInfoWindow);
        setTimeout(dropMarker(i), i * 100);
        addResult(results[i], i);
      }
    }
  });
}

function clearMarkers() {
  for (var i = 0; i < markers.length; i++) {
    if (markers[i]) {
      markers[i].setMap(null);
    }
  }
  markers = [];
}

// [START region_setcountry]
// Set the country restriction based on user input.
// Also center and zoom the map on the given country.
// function setAutocompleteCountry() {
//   var country = document.getElementById('country').value;
//   if (country == 'all') {
//     autocomplete.setComponentRestrictions([]);
//     interestMap.setCenter(new google.maps.LatLng(15, 0));
//     interestMap.setZoom(2);
//   } else {
//     autocomplete.setComponentRestrictions({ 'country': country });
//     interestMap.setCenter(countries[country].center);
//     interestMap.setZoom(countries[country].zoom);
//   }
//   clearResults();
//   clearMarkers();
// }
// [END region_setcountry]

function dropMarker(i) {
  return function() {
    markers[i].setMap(interestMap);
  };
}

// THE BELOW CODE IS FOR THE TABLE NEXT TO THE MAP THAT HOUSES ALL PLACES
function addResult(result, i) {
  var results = document.getElementById('results');
  var markerLetter = String.fromCharCode('A'.charCodeAt(0) + i);
  var markerIcon = MARKER_PATH + markerLetter + '.png';

  var tr = document.createElement('tr');
  tr.style.backgroundColor = (i % 2 == 0 ? '#d8d8d8' : '#FFFFFF');
  tr.onclick = function() {
    google.maps.event.trigger(markers[i], 'click');
  };

  var iconTd = document.createElement('td');
  var nameTd = document.createElement('td');
  var icon = document.createElement('img');
  icon.src = markerIcon;
  icon.setAttribute('class', 'placeIcon');
  icon.setAttribute('className', 'placeIcon');
  var name = document.createTextNode(result.name);
  iconTd.appendChild(icon);
  nameTd.appendChild(name);
  tr.appendChild(iconTd);
  tr.appendChild(nameTd);
  results.appendChild(tr);
}

function clearResults() {
  var results = document.getElementById('results');
  while (results.childNodes[0]) {
    results.removeChild(results.childNodes[0]);
  }
}

// Get the place details for a hotel. Show the information in an info window,
// anchored on the marker for the hotel that the user selected.
function showInfoWindow() {
  var marker = this;
  places.getDetails({placeId: marker.placeResult.place_id},
      function(place, status) {
        if (status != google.maps.places.PlacesServiceStatus.OK) {
          return;
        }
        infoWindow.open(interestMap, marker);
        buildIWContent(place);
      });
}

// Load the place information into the HTML elements used by the info window.
function buildIWContent(place) {
  document.getElementById('iw-icon').innerHTML = '<img class="hotelIcon" ' +
      'src="' + place.icon + '"/>';
  document.getElementById('iw-url').innerHTML = '<b><a href="' + place.url +
      '">' + place.name + '</a></b>';
  document.getElementById('iw-address').textContent = place.vicinity;

  if (place.formatted_phone_number) {
    document.getElementById('iw-phone-row').style.display = '';
    document.getElementById('iw-phone').textContent =
        place.formatted_phone_number;
  } else {
    document.getElementById('iw-phone-row').style.display = 'none';
  }

  // Assign a five-star rating to the hotel, using a black star ('&#10029;')
  // to indicate the rating the hotel has earned, and a white star ('&#10025;')
  // for the rating points not achieved.
  if (place.rating) {
    var ratingHtml = '';
    for (var i = 0; i < 5; i++) {
      if (place.rating < (i + 0.5)) {
        ratingHtml += '&#10025;';
      } else {
        ratingHtml += '&#10029;';
      }
    document.getElementById('iw-rating-row').style.display = '';
    document.getElementById('iw-rating').innerHTML = ratingHtml;
    }
  } else {
    document.getElementById('iw-rating-row').style.display = 'none';
  }

  // The regexp isolates the first part of the URL (domain plus subdomain)
  // to give a short URL for displaying in the info window.
  if (place.website) {
    var fullUrl = place.website;
    var website = hostnameRegexp.exec(place.website);
    if (website == null) {
      website = 'http://' + place.website + '/';
      fullUrl = website;
    }
    document.getElementById('iw-website-row').style.display = '';
    document.getElementById('iw-website').textContent = website;
  } else {
    document.getElementById('iw-website-row').style.display = 'none';
  }
}

google.maps.event.addDomListener(window, 'load', initialize);

  
</script>

<script>
  var icons = new Skycons({"color":"brown"}),


      list = [
        "clear-day",
        "clear-night",
        "partly-cloudy-day",
        "partly-cloudy-night",
        "cloudy",
        "rain",
        "sleet",
        "snow",
        "wind",
        "fog"
       ],
      i;

  for(i = list.length; i--; ) {
      var weatherType = list[i],
          elements = document.getElementsByClassName( weatherType );
      for (e = elements.length; e--;){
          icons.set( elements[e], weatherType );
      }
  }


  icons.play();
</script>



