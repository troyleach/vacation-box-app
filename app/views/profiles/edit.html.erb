
<h2>About <%= current_user.email %></h2>
<h4>Update your profile</h4>

  <div class="row profile_row">
  <div class="users_profile_image col-xs-6 col-md-4">
    <%= image_tag current_user.gravatar_url,  :class => "gravatar_image_profile" %>
    <p>Don't have a gravatar? It is very easy to get one just go <a href="https://en.gravatar.com/" target="_blank">here</a></p>
  </div>
  <%= form_tag "/profiles/current_user.id", :method => :patch do %>
  
    <div class="users_name col-xs-6 col-md-4">
      <div>
        <%= label_tag :first_name, "First Name:" %>
      </div>
      <div>
        <%= text_field_tag :first_name, @profile.first_name %> 
      </div>
      <div>
        <%= label_tag :last_name, "Last Name:" %>
      </div>
      <div>
        <%= text_field_tag :last_name, @profile.last_name %> 
      </div>
      <div>
        <%= label_tag :email, "Email:" %>
      </div>
      <div>
        <%= text_field_tag :email, current_user.email %> 
      </div>
      <div>
        <%= label_tag :username, "Username:" %>
      </div>
      <div>
        <%= text_field_tag :username, @profile.username %> 
      </div>
    </div><!-- End of second box users_name -->
    
      <div class="users_address col-xs-6 col-md-4">
  
    <p>Where do you live. We only need city and state.</p>

      

      <%= hidden_field_tag :street_number %>

      <div>
        <%= label_tag :route, "Address:" %>
      </div>
      <div>
        <%= text_field_tag :route, "#{@profile.street_number} #{@profile.route}" %> 
      </div>

      <div>
        <%= label_tag :locality, "City:" %>
      </div>
      <div>
        <%= text_field_tag :locality, @profile.locality %> 
      </div>

      <div>
        <%= label_tag :administrative_area_level_1, "State:" %>
      </div>
      <div>
        <%= text_field_tag :administrative_area_level_1, @profile.administrative_area_level_1 %> 
      </div>

      <div>
        <%= label_tag :postal_code, "Zip:" %>
      </div>
      <div>
        <%= text_field_tag :postal_code, @profile.postal_code %> 
      </div>
      <div>
        <%= label_tag :country, "Country:" %>
      </div>
      <div>
        <%= text_field_tag :country, @profile.country %> 
      </div>

      <div>
        <%= label_tag :place_id, "Places ID" %>
      </div>
      <div>
        <%= text_field_tag :place_id, @profile.place_id %> 
      </div>
      

      <%= hidden_field_tag :user_id, current_user.id %>
      
      
    </div><!-- End of third box users_address -->


    <div class="profiles_submit_button"><%= submit_tag "Update me" %></div>
    
    <% end %>
  </div><!-- End of row -->

  
  <body onload="initialize()">
    <div id="profileLocationField">
      <input id="autocompleteT" placeholder="Enter your address"
             onFocus="geolocate()" type="text"></input>
    </div>
  </body>
    <!-- <table id="address">
      <tr>
        <td class="label">Street address</td>
        <td class="slimField"><input class="field" id="street_number"
              disabled="true"></input></td>
        <td class="wideField" colspan="2"><input class="field" id="route"
              disabled="true"></input></td>
      </tr>
      <tr>
        <td class="label">City</td>
        <td class="wideField" colspan="3"><input class="field" id="locality"
              disabled="true"></input></td>
      </tr>
      <tr>
        <td class="label">State</td>
        <td class="slimField"><input class="field"
              id="administrative_area_level_1" disabled="true"></input></td>
        <td class="label">Zip code</td>
        <td class="wideField"><input class="field" id="postal_code"
              disabled="true"></input></td>
      </tr>
      <tr>
        <td class="label">Country</td>
        <td class="wideField" colspan="3"><input class="tfield"
              id="profileCountry" disabled="true"></input></td>
      </tr>
      <tr>
        <td class="label">Place ID</td>
        <td class="wideField" colspan="3"><input class="field"
              id="place_id"></input></td>
      </tr>
    </table> -->
  


<script>
  // This example displays an address form, using the autocomplete feature
  // of the Google Places API to help users fill in the information.

  var placeSearch, autocompleteT;
  var componentForm = {
    street_number: 'short_name',
    route: 'long_name',
    locality: 'long_name',
    administrative_area_level_1: 'short_name',
    country: 'long_name',
    postal_code: 'short_name',
    place_id: 'place_id'
  };
  console.log("this is the frist object")
  console.log(componentForm)
  function initialize() {
    // Create the autocomplete object, restricting the search
    // to geographical location types.
    autocompleteT = new google.maps.places.Autocomplete(
        /** @type {HTMLInputElement} */(document.getElementById('autocompleteT')),
        { types: ['geocode'] });
    // When the user selects an address from the dropdown,
    // populate the address fields in the form.
    google.maps.event.addListener(autocompleteT, 'place_changed', function() {
      fillInAddress();
    });
  }
  console.log("this is the second object")
  console.log(autocompleteT)
  // [START region_fillform]
  function fillInAddress() {
    // Get the place details from the autocomplete object.
    var place = autocompleteT.getPlace();


console.log("this is the third object")
console.log(place)


    for (var component in componentForm) {
      document.getElementById(component).value = '';
      document.getElementById(component).disabled = false;
    }
    document.getElementById("place_id").value = place.place_id
    // Get each component of the address from the place details
    // and fill the corresponding field on the form.
    for (var i = 0; i < place.address_components.length; i++) {
      var addressType = place.address_components[i].types[0];
      if (componentForm[addressType]) {
        
        var val = place.address_components[i][componentForm[addressType]];
        document.getElementById(addressType).value = val;
      }
    }
    
  }
  
  // [END region_fillform]

  // [START region_geolocation]
  // Bias the autocomplete object to the user's geographical location,
  // as supplied by the browser's 'navigator.geolocation' object.
  function geolocate() {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        var geolocation = new google.maps.LatLng(
            position.coords.latitude, position.coords.longitude);
        var circle = new google.maps.Circle({
          center: geolocation,
          radius: position.coords.accuracy
        });
        autocompleteT.setBounds(circle.getBounds());
      });
    }
  }
  // [END region_geolocation]
  
</script>

